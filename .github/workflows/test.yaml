---
name: Test Matrix Output

on:
  push:
    branches:
      - releases/**

permissions: write-all
  # contents: read
  # id-token: write
  # pull-requests: write

jobs:

  create_matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    env:
      owner: ${{ github.repository_owner }}
      repo: ${{ github.repository }}
      release: ${{ github.ref_name }}
      GH_TOKEN: ${{ github.token }}
    steps:
      - run: |
          echo "REPO: ${repo}"
          echo "RELEASE: ${release}"
      - id: set-matrix
        run: |
          set -eux
          environments=$(gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /repos/${repo}/environments | jq -r '.environments[] | .name' -)
          echo -n "{\"include\":[" > current_releases.json
          for environment in $environments; do
            echo -n $(gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /repos/${repo}/environments/${environment}/variables | jq '.variables[] | select(.name == "RELEASE" and .value == $ARGS.positional[0]) | {environment: $ARGS.positional[1], release: .value}' --args $release $environment -) | sed 's/\({.*}\)/\1, /' >> current_releases.json
          done
          sed -i'' -e 's/, $//' current_releases.json
          echo -n "]}" >> current_releases.json
          sed -i'' -e 's/"/\\"/g' current_releases.json
          echo "matrix=$(cat current_releases.json)"
      - run: cat currrent_releases.json


  work_with_matrix:
    needs: create_matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.create_matrix.outputs.matrix) }}
    environment: ${{ matrix.environment }}
    steps:
      - run: echo ENVIRONMENT ${{ matrix.environment }}
      - run: echo CIDR_BLOCK ${{ vars.TF_VAR_cidr_block }}
      - run: echo RELEASE ${{ vars.RELEASE }}
      - run: echo REF_NAME ${{ github.ref_name}}
      - run: echo REF_TYPE ${{ github.ref_type}}

...