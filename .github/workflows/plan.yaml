---

name: Deploy against Test environment

on:
  pull_request:
    branches:
      - main

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  AWS_ROLE_ARN: ${{ vars.AWS_ROLE_ARN }}
  TF_VAR_cidr_block: ${{ vars.TF_VAR_cidr_block }}
  TF_VAR_name: ${{ vars.TF_VAR_name }}

permissions:
  contents: read
  id-token: write
  pull-requests: write

jobs:
  terraform_plan:
    name: Plan
    runs-on: ubuntu-latest
    environment: test
    steps:
      - name: Checkout
        id: gh-checkout
        uses: actions/checkout@v2

      - name: Authenticate to AWS
        id: aws-login
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Setup
        id: tf-setup
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Version
        id: tf-version
        run: terraform version

      - name: Terraform Backend
        id: tf-set-backend
        run: |
          cat > backend.tf << EOF
          terraform {
            backend "s3" {
              bucket         = "${{ vars.TERRAFORM_BACKEND_S3_BUCKET }}"
              key            = "${{ vars.TERRAFORM_BACKEND_S3_KEY }}/terraform.tfstate"
              region         = "${{ env.AWS_REGION }}"
              dynamodb_table = "${{ vars.TERRAFORM_BACKEND_S3_DYNAMODB_TABLE }}"
            }
          }
          EOF

      - name: List files
        id: list-files
        run: ls -la

      - name: Terraform Init
        id: tf-init
        run: terraform init

      - name: Terraform Format
        id: tf-fmt
        run: terraform fmt -check
  
      - name: Terraform Validate
        id: tf-validate
        run: terraform validate

      - name: Terraform Plan
        id: tf-plan
        run: terraform plan -out=tfplan

      - name: Upload Build Artifacts
        id: upload-artifacts
        uses: actions/upload-artifact@v2
        with:
          name: terraform-plan.artifacts
          path: |
            tfplan
            backend.tf

  terraform_deploy:
    name: Deploy
    needs: [ terraform_plan ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        id: gh-checkout
        uses: actions/checkout@v2

      - name: Authenticate to AWS
        id: aws-login
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Setup
        id: tf-setup
        uses: hashicorp/setup-terraform@v2

      - name: Download Build Artifacts
        id: download-artifacts
        uses: actions/download-artifact@v2
        with:
          name: terraform-plan.artifacts
          path: ./

      - name: List files
        id: list-files
        run: ls -la

      - name: Terraform Show Backend
        id: tf-show-backend
        run: cat ./backend.tf

      - name: Terraform Init
        id: tf-init
        run: terraform init

      - name: Terraform Apply
        id: tf-apply
        run: terraform apply tfplan

      - name: Terraform Output
        id: tf-output
        run: terraform output

      - name: Terraform Show
        id: tf-show
        run: terraform show

...